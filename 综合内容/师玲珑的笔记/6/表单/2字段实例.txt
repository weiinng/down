initial
初始值，input框里面的初始值
class loginForm(forms.Form):
	username=forms.CharField(
		min_length=8,
		label='用户名',
		initial='张三'  #设置默认值
	)
	pwd=forms.CharField(min_length=6,label='密码')


――――――――――――――――――――――――――――――――――――

error_messages
重写错误信息

class LoginForm(forms.Form):
	username=forms.CharField(
		min_length=8,
		label='用户名',
		initial='张三',
		error_messages={
			'required':'不能为空',
			'invalid':'格式错误',
			'min_length':'用户名最短8位'
		}
	)
	pwd=forms.CharField(min_length=6,label='密码')

――――――――――――――――――――――――――――――――――――――

password

class LoginForm(forms.Form):
	pwd=forms.CharField(
		min_length=6,
		label='密码',
		widget=forms.widget.PasswordInput(attrs={'class':'c1'},render_value=True
	)

――――――――――――――――――――――――――――――――――――――――

radioSelect

单radio值为字符串

class LoginForm(forms.Form):
	username=forms.CharField(
		min_length=8,
		label='用户名',
		initial='张三',
		error_messages={
			'required':'不能为空',
			'invalid':'格式错误',
			'min_length':'用户名最短8位'
		}
	)
	pwd=forms.CharField(min_length=6,label='密码')
	gender=forms.fields.ChoiceField(
		choices=((1,'男'),(2,'女'),(3,'保密')),
		label='性别',
		initial=3,
		widget=forms.widgets.RadioSelect()
	)

――――――――――――――――――――――――――――――――――――――

单选Select

class LoginForm(forms.Form):
	hobdy=forms.fields.ChoiceField(
		choices=((1,'篮球'),(2,'足球'),(3,'双色球'),),
		label='爱好',
		initial=3,
		widget=forms.widgets.Select()
	)


多选Select

class LoginForm(forms.Form):
	hobdy=forms.fields.MultipleChoiceField(
		choices=((1,'篮球'),(2,'足球'),(3,'双色球'),),
		label='爱好',
		initial=[1,3],
		widget=forms.widgets.SelectMultiple()
	)

――――――――――――――――――――――――――――――――――――――

单选checkbox

class LoginForm(forms.Form):
	keep=forms.fields.ChoiceField(
		label='是否记住密码',
		initial='checked',
		widget=forms.widgets.CheckboxInput()
	)

多选checkbox

class LoginForm(forms.Form):
	hobdy=forms.fields.MultipleChoiceField(
		choices=((1,'篮球'),(2,'足球'),(3,'双色球'),),
		label='爱好',
		initial=[1,3],
		widget=forms.widgets.CheckboxSelectMultiple()
	)

关于choice的注意事项：
在使用选择标签时，需要注意choices的选项可以从数据库中获取，但是由于是静态字段，获取的值无法实时更新，那么需要自定义构造方法从而达到此目的。


方式一：

from django.forms import Form,widgets,fields

class MyForm(Form):

	user=fields.ChoiceField(
		#choices=((1,'上海'),(2,'北京'),),
		initial=2,
		widget=widgets.Select
	)
	
	def __init__(self,*args,**kwargs):
		super(MyForm,self).__init__(*args,**kwargs)
		#self.fields['user'].choices=((1,'上海'),(2,'北京'),)
		#或
		self.fields['user'].choices=models.Classes.objects.all().values_list('id','caption')
























































